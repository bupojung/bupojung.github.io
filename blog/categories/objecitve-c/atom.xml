<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objecitve-c, | Bupo's Blog]]></title>
  <link href="http://bupojung.github.io/blog/categories/objecitve-c/atom.xml" rel="self"/>
  <link href="http://bupojung.github.io/"/>
  <updated>2017-02-17T15:14:52+08:00</updated>
  <id>http://bupojung.github.io/</id>
  <author>
    <name><![CDATA[bupo]]></name>
    <email><![CDATA[bupo.jung@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[实现一个控件的思路]]></title>
    <link href="http://bupojung.github.io/blog/2016/06/03/shi-xian-%5B%3F%5D-ge-kong-jian-de-si-lu/"/>
    <updated>2016-06-03T19:24:09+08:00</updated>
    <id>http://bupojung.github.io/blog/2016/06/03/shi-xian-[?]-ge-kong-jian-de-si-lu</id>
    <content type="html"><![CDATA[<p>——易用性和可扩展性</p>

<p>by bupo.</p>

<p>这里通过实现一个弹出菜单控件为例。弹出菜单如图所示，菜单可以有多行，每一行有多个选项，每一行可能有个标题，每行有多个选项，如果选项个数超过屏幕范围可以左右滑动。点击选项执行对应的功能模块。这里把这个控件命名为ScrollActionSheet。</p>

<!-- more -->


<p><img src="/static/2016/06/03/actionSheet.jpg" alt="Alt text" /></p>

<h4>实现</h4>

<p>通过界面和需求可以分析出，ScrollActionSheet 包含几个部分：
- 选项按钮ActionSheetItemView；
- 包含多个选项和标题的一个可滑动模块HorizontleScrollPannel；
- 取消按钮，就是一个简单的button；</p>

<p>这三个部分是ScrollActionSheet的UI，这几个模块中，我们需要找出哪些东西是会变化的，哪些是不变化的，然后把变化的部分独立出来，把不变的封装起来。用户使用的时候只需要通过继承或者组合的方式修改可变的部分就可以使用这个ScrollActionSheet。可以看出用户可能改变的部分都在ActionSheetItemView中，包括图片，标题，点击后的回调方法，还有这个ActionSheetItemView的大小和布局；而HorizontleScrollPanner和整个ScrollActionSheet不需要去改动。
所以这里ActionSheetItemView 需要负责布局和展示自己的内容，所以我们独立出另一个类ActionSheetItem。大概的关系如下图所示：
<img src="/static/2016/06/03/ActionSheetClass.png" alt="Alt text" /></p>

<p>使用的时候只需要创建ActionSheetItem添加到ScrollActionSheet中展示就可以了
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objectivec'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">showShareView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">NSMutableArray</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">shareItems</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">NSMutableArray</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">moreItems</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableArray</span> <span class="n">array</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">shareItems</span> <span class="nl">addObject</span><span class="p">:[</span><span class="n">BPScrollActionSheetItem</span> <span class="nl">itemWithImage</span><span class="p">:</span><span class="n">BPIMAGE</span><span class="p">(</span><span class="s">@&quot;more_icon_share_wx.png&quot;</span><span class="p">)</span> <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;微信好友&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">BPBaseActionSheetItem</span> <span class="o">*</span><span class="n">item</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;item click:%@&quot;</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class='line'><span class="p">}]];</span>
</span><span class='line'><span class="p">[</span><span class="n">shareItems</span> <span class="nl">addObject</span><span class="p">:[</span><span class="n">BPScrollActionSheetItem</span> <span class="nl">itemWithImage</span><span class="p">:</span><span class="n">BPIMAGE</span><span class="p">(</span><span class="s">@&quot;more_icon_share_friends.png&quot;</span><span class="p">)</span> <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;微信朋友圈&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">BPBaseActionSheetItem</span> <span class="o">*</span><span class="n">item</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;item click:%@&quot;</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class='line'><span class="p">}]];</span>
</span><span class='line'><span class="p">[</span><span class="n">shareItems</span> <span class="nl">addObject</span><span class="p">:[</span><span class="n">BPScrollActionSheetItem</span> <span class="nl">itemWithImage</span><span class="p">:</span><span class="n">BPIMAGE</span><span class="p">(</span><span class="s">@&quot;more_icon_share_qq.png&quot;</span><span class="p">)</span> <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;QQ好友&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">BPBaseActionSheetItem</span> <span class="o">*</span><span class="n">item</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;item click:%@&quot;</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class='line'><span class="p">}]];</span>
</span><span class='line'><span class="p">[</span><span class="n">shareItems</span> <span class="nl">addObject</span><span class="p">:[</span><span class="n">BPScrollActionSheetItem</span> <span class="nl">itemWithImage</span><span class="p">:</span><span class="n">BPIMAGE</span><span class="p">(</span><span class="s">@&quot;more_icon_share_qzone.png&quot;</span><span class="p">)</span> <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;QQ空间&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">BPBaseActionSheetItem</span> <span class="o">*</span><span class="n">item</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;item click:%@&quot;</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class='line'><span class="p">}]];</span>
</span><span class='line'>
</span><span class='line'><span class="n">BPLongActionSheetItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="n">BPLongActionSheetItem</span> <span class="nl">itemWithImage</span><span class="p">:</span><span class="n">BPIMAGE</span><span class="p">(</span><span class="s">@&quot;qualifying_icon_set&quot;</span><span class="p">)</span> <span class="nl">title</span><span class="p">:</span><span class="s">@&quot;偏好设置&quot;</span> <span class="nl">subTitle</span><span class="p">:</span><span class="s">@&quot;啦啦啦编辑偏好设置啊&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">BPBaseActionSheetItem</span> <span class="o">*</span><span class="n">item</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;item click:%@&quot;</span><span class="p">,</span><span class="n">item</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">moreItems</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">section</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">shareItems</span> <span class="n">count</span><span class="p">]</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">section</span> <span class="o">=</span> <span class="l">@{</span>
</span><span class='line'>                <span class="s">@&quot;title&quot;</span><span class="o">:</span><span class="s">@&quot;掐指一算，你还缺几个兄弟啊！火速召唤他们&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">@&quot;items&quot;</span><span class="o">:</span><span class="n">shareItems</span><span class="p">,</span>
</span><span class='line'>                <span class="l">}</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">upperSection</span> <span class="o">=</span> <span class="l">@{</span>
</span><span class='line'>                               <span class="s">@&quot;title&quot;</span><span class="o">:</span><span class="s">@&quot;haha &quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="s">@&quot;items&quot;</span><span class="o">:</span><span class="n">moreItems</span><span class="p">,</span>
</span><span class='line'>                               <span class="l">}</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSArray</span> <span class="o">*</span><span class="n">sections</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="n">sections</span> <span class="o">=</span> <span class="l">@[</span><span class="n">upperSection</span><span class="p">,</span><span class="n">section</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'><span class="n">BPScrollActionSheet</span> <span class="o">*</span><span class="n">actionSheet</span> <span class="o">=</span> <span class="p">[[</span><span class="n">BPScrollActionSheet</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithItems</span><span class="p">:</span><span class="n">sections</span> <span class="nl">description</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">cancelButtonTitle</span><span class="p">:</span><span class="s">@&quot;取消&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">actionSheet</span> <span class="nl">showInView</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
如上面代码所示，LongActionSheetItem继承自ActionSheetItem，比ActionSheetItem多了一个小标题字段，其对应的View为LongActionsSheetItemView负责自定义布局，对于自定义的Item用户只需要继承ActionSheetItem和ActionSheetItemView自定义内容和布局即可。</p>

<p><img src="/static/2016/06/03/ActionSheetDemo.png" alt="Alt text" /></p>

<p>这里通过组合封装达到了易用性的目的，而可扩展性则通过独立出可变模块，通过组合，继承来实现。具体的代码稍后会上传到github，点击这里<a href="https://github.com/bupojung/BPActionScrollActionSheet">下载</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript原生交互解决方]]></title>
    <link href="http://bupojung.github.io/blog/2016/06/01/javascriptyuan-sheng-jiao-hu-jie-jue-fang/"/>
    <updated>2016-06-01T20:13:42+08:00</updated>
    <id>http://bupojung.github.io/blog/2016/06/01/javascriptyuan-sheng-jiao-hu-jie-jue-fang</id>
    <content type="html"><![CDATA[<p>by bupo.</p>

<h4>简介</h4>

<p>在终端应用开发过程中经常需要在H5页面中调用原生接口来使用原生服务，所以就有了Javascript与原生代码交互的需求，这里终结一下以前在项目中使用的一种解决方案。
原理很简单，通过在UIWebView的代理中截获window.location.href 跳转请求来响应Javascript请求，并通过UIWebview 提供的执行JS代码的接口stringByEvaluatingJavaScriptFromString 将原始执行结果回调给H5页面。</p>

<!-- more -->


<h4>具体实施</h4>

<p>首先终端和H5确定好调用协议，这里以获取经纬度为例</p>

<pre><code>jsbridge://getLocation/callback=xx#seq
</code></pre>

<p>其中jsbridge是我们自定义的一个协议名，用来区分是调用原生接口的请求还是网络请求，getLocation是接口名称，"/&ldquo;和“#”之前是参数对，多个参数用&amp;链接，“#”后的seq是调用回调函数的时候传回给JS代码的序列号，用于在多次调用时区分是那一次调用，如果不需要回调给JS可以不传。
下面是H5代码示例，页面中有一个按钮，点击按钮发起原生调用请求。</p>

<pre><code class="html">
&lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;title&gt; JS原生交互示例 &lt;/title&gt;
 &lt;meta charset="utf-8"&gt;
 &lt;meta name="generator" content="editplus"&gt;
 &lt;meta name="author" content=""&gt;
 &lt;meta name="keywords" content=""&gt;
 &lt;meta name="description" content=""&gt;
 &lt;script language="javascript" type="text/javascript"&gt;

function call_getLocation(){
    window.location.href="jsbridge://getLocation/callback=showData#1"
}
function showData(s,info){
    alert(JSON.stringify(info));
}
 &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;input type="button" onclick="call_getLocation()" value="location"/&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>在UIWebviewController的代理中捕获请求，判断是原生请求并调用相应接口。代码如下：
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objectivec'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">webView:</span><span class="p">(</span><span class="bp">UIWebView</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">webView</span> <span class="nf">shouldStartLoadWithRequest:</span><span class="p">(</span><span class="bp">NSURLRequest</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">request</span> <span class="nf">navigationType:</span><span class="p">(</span><span class="n">UIWebViewNavigationType</span><span class="p">)</span><span class="nv">navigationType</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">NSURL</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">requestURL</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">URL</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSString</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">urlString</span> <span class="o">=</span> <span class="p">[</span><span class="n">requestURL</span> <span class="n">absoluteString</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">BOOL</span> <span class="n">shouldStartLoad</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">([</span><span class="n">urlString</span> <span class="nl">hasPrefix</span><span class="p">:</span><span class="s">@&quot;jsbridge://&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">decodeCMDandParams</span><span class="p">:[</span><span class="n">urlString</span> <span class="nl">substringFromIndex</span><span class="p">:</span><span class="n">kJSBridgePre</span><span class="p">.</span><span class="n">length</span><span class="p">]];</span>
</span><span class='line'>    <span class="n">shouldStartLoad</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">shouldStartLoad</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>decodeCMDandParams 方法解析出接口名和参数，利用OC runtime特性执行对应原生代码。</p>

<pre><code>- (void)decodeCMDandParams:(NSString *)cmdAndParams
{
    QBLogDebug(@"request cmd and params:%@",cmdAndParams);
    NSArray *data = [cmdAndParams componentsSeparatedByString:@"/"];
    NSString *cmd = [data firstObject];
    NSDictionary *params = nil;
    if ([data count] &gt; 1) {
        params = [self parseParams:data[1]];
    }

    [self invokeWithCMD:cmd andParams:params];
}

- (void)invokeWithCMD:(NSString *)cmd andParams:(NSDictionary *)params
{
    if (cmd == nil || cmd.length == 0) {
        return;
    }
    SEL selector = NSSelectorFromString([NSString stringWithFormat:@"Test_%@:",cmd]);
    if ([self respondsToSelector:selector]) {
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Warc-performSelector-leaks"
        [self performSelector:selector withObject:params];
#pragma clang diagnostic pop

    }
}
</code></pre>

<p>这样只需要和前端定好交互协议，并实现对应的原生接口就可以完成JS调用原生接口的功能。
接下来是将原生接口的执行结果回调给JS代码，这个比较简单，通过在参数中解析得到callback参数，将结果拼接成JS代码调用stringByEvaluatingJavaScriptFromString方法就行了。具体代码：
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objectivec'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">excuteCallback:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">callback</span> <span class="nf">argments:</span><span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nv">dic</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">callback</span> <span class="o">==</span> <span class="nb">nil</span> <span class="o">||</span> <span class="n">callback</span><span class="p">.</span><span class="n">length</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">dic</span><span class="p">)</span> <span class="n">dic</span> <span class="o">=</span> <span class="l">@{}</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">s</span> <span class="o">=</span> <span class="p">[[</span><span class="n">dic</span> <span class="nl">objectForKey</span><span class="p">:</span><span class="n">kSequence</span><span class="p">]</span><span class="n">integerValue</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// dic to string</span>
</span><span class='line'>    <span class="bp">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">arguments</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">serializeCallbackArgumentWithObject</span><span class="p">:</span><span class="n">dic</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">NSString</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">jsFunction</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">%</span><span class="l">@(</span><span class="o">%</span><span class="n">lu</span><span class="p">,</span><span class="o">%</span><span class="p">@</span><span class="l">)</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span><span class="n">callback</span><span class="p">,</span><span class="n">s</span><span class="p">,</span><span class="n">arguments</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">webView</span> <span class="nl">stringByEvaluatingJavaScriptFromString</span><span class="p">:</span><span class="n">jsFunction</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nl">serializeCallbackArgumentWithObject</span><span class="p">:(</span><span class="bp">NSDictionary</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">object</span><span class="p">{</span>
</span><span class='line'>  <span class="bp">NSData</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSJSONSerialization</span> <span class="nl">dataWithJSONObject</span><span class="p">:</span><span class="n">object</span> <span class="nl">options</span><span class="p">:</span><span class="mi">0</span> <span class="nl">error</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">str</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData</span><span class="p">:</span><span class="n">data</span> <span class="nl">encoding</span><span class="p">:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">str</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></li>
</ul>


<p>完整的代码可以在这里<a href="https://github.com/bupojung/BPJSNativeInteract">下载</a></p>
]]></content>
  </entry>
  
</feed>
